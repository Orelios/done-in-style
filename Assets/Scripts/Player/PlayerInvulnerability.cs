using System.Collections;
using UnityEngine;

public class PlayerInvulnerability : MonoBehaviour
{
    [SerializeField] private float hurtStateDuration;
    [SerializeField] private float invulnerabilityDuration;
    [SerializeField] private float knockBackStrength; 
    
    private bool _isHit; 
    public bool IsHit => _isHit;
    private bool _isInvulnerable;
    public bool IsInvulnerable => _isInvulnerable;

    private Player _player;
    private void Awake()
    {
        _isHit = false;
        _isInvulnerable = false;
        _player = GetComponent<Player>();
    }

    public void DamagePlayer()
    {
        StartCoroutine(DamagePlayerRoutine());
    }

    private IEnumerator DamagePlayerRoutine()
    {
        _isHit = true;
        _isInvulnerable = true;
        _player.Health.DecreaseHealth();
        KnockBack(); 
       _player.Sprite.color = new Color(_player.Sprite.color.r, _player.Sprite.color.g, _player.Sprite.color.b, 0.5f);
        
        yield return new WaitForSeconds(hurtStateDuration); 
        
        _isHit = false;
        
        yield return new WaitForSeconds(invulnerabilityDuration);
        
        _isInvulnerable = false;        
        _player.Sprite.color = new Color(_player.Sprite.color.r, _player.Sprite.color.g, _player.Sprite.color.b, 1f);
    }

    private void KnockBack()
    {
        _player.Rigidbody.linearVelocity =
            new Vector2(transform.rotation.y == 0 ? 1 - knockBackStrength : -1 * -knockBackStrength, knockBackStrength);
        //Debug.Log(collision.gameObject.GetComponent<Rigidbody2D>().linearVelocity);
    }
}
